steps:
    - {type: configureHandler, name: async, retryDelay: 0 }

    # We need to copy the recource we will use for the generic test
    - {type: copyTmpResource, from: Csv/happy-comma.csv }

    # Consume one set of rows from the csv, the amount here is 1, but the consumer is set to read 3 lines
    - {type: consume, uri: csv://test/consumer/read_happy, amount: 1 }

    # Test that we returned 3 lines as expected from the csv
    -
        type: checkSpyArray
        path: csv/read_file1
        values:
            lines:
                - ['a1', 'b1', 'c1' ]
                - ['a2', 'b2', 'c2' ]
                - ['a3', 'b3', 'c3' ]

    # Consume one set of rows from the csv, the amount here is 1, but the consumer is set to read 2 lines
    - {type: consume, uri: csv://test/consumer_2/read_happy, amount: 1 }

    # Test that we returned 2 lines as expected from the csv
    -
        type: checkSpyArray
        path: csv/read_file2
        values:
            lines:
                - ['a1', 'b1', 'c1' ]
                - ['a2', 'b2', 'c2' ]

    # And the csvGeneric
    # Consume one set of rows from the csv, the amount here is 1, but the consumer is set to read 2 lines
    - {type: consume, uri: csv://generic//tmp/integration-framework-test/happy-comma.csv, amount: 1 }

    # Test that we returned 1 lines as expected from the csv
    -
        type: checkSpyArray
        path: csv/read_file3
        values:
            lines:
                - ['a1', 'b1', 'c1' ]

    # Clean up all the tmp files after our selves
    - {type: cleanTmpResources }