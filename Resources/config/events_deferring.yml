services:
  # This effectively overrides Symfony's dispatcher. Tag is there to emulate what Symfony 3.4 does with its own disptacher.
  event_dispatcher:
    class: Smartbox\Integration\FrameworkBundle\Tools\EventsDeferring\EventDispatcher
    tags:
      - { name: container.hot_path }
    arguments:
      $container: '@service_container'
    public: true

  smartesb.handlers.events:
      class: Smartbox\Integration\FrameworkBundle\Tools\EventsDeferring\DeferredEventsHandler
      calls:
        - [setId, ['smartesb.handlers.events']]
        - [setEventDispatcher, ['@event_dispatcher']]
        - [setFlowsVersion, ["%smartesb.flows_version%"]]
      public: true

  smartesb.registry.event_filters:
    class: Smartbox\Integration\FrameworkBundle\Tools\EventsDeferring\EventFiltersRegistry
    public: true
